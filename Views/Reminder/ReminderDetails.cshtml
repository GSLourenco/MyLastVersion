@model MvcApplication2.Models.Reminder


<div class="container col-md-10">
    <img class="cross-img1" onclick="DeleteReminder(this.parentElement,@Model.id)" src="http://www.clker.com/cliparts/0/7/e/a/12074327311562940906milker_X_icon.svg.med.png" />
    <p></p>
    <!-- Features Section -->
    <div id="dialog-confirm1"></div>
    <form role="form" action="/Reminder/EditReminder" method="post" onsubmit="editReminder();return false;">
        <div class="row">
            <input maxlength="50" id="title1" type="text" required="required" class="form-control" placeholder="Inserir título do lembrete" value="@Model.title" />
            <p></p>
            <input maxlength="150" id="description1" type="text" required="required" class="form-control" placeholder="Inserir descrição do lembrete" value="@Model.description" />
            <p></p>
            @{System.Web.Script.Serialization.JavaScriptSerializer js = new System.Web.Script.Serialization.JavaScriptSerializer();
              if (js.Deserialize<List<string>>(Model.urls).Count() > 0)
              {
            
                <div id="pictogramMode">
                    <h4>Prefere pictogramas ou as suas próprias imagens?</h4>
                    <input type="radio" name="mode1" value="pict" checked="checked" class="checkthis form-group">Pesquisa de pictogramas<br>
                    <input type="radio" name="mode1" class="checkthis form-group">Upload de Imagem<br>
                </div>
                <div id="searchbox1">
                    @Html.TextBox("name1", "", new { @style = "float: left;width:95%", @class = "form-control", placeholder = "Inserir palavra ou expressão" })
                    <button type="button" style="float: right; height: 34px; width: 5%" class="btn btn-success">
                        <span class="sbico"></span>
                    </button>
                </div>
                <div id="FileUpload1" class="col-md-8 left-div" style="display: none;">
                    <div class="uploadButton">
                        <input id="file1" type="file" name="file" />
                    </div>
                    <button type="button" class="btn btn-success" value="Fazer upload da imagem">Fazer upload da imagem</button>
                </div> 
                <div id="painel1" class="col-md-8 left-div">
                </div>
                <div id="selectedPainel1" class="col-md-8 right-div">


                    @foreach (var url in js.Deserialize<List<string>>(Model.urls))
                    {
                
                        <div class="wrapper">
                            <img class="img" src= "@url" style="height: 100px; width: 100px" />
                        </div>
                
                    }

                </div>
              }
            }
            <label id="NoPictogramsError1"></label>
            <div style="clear: both"></div>
            <p></p>
            <div style="clear: both"></div>
            <div class="container" style="border: 5px solid; width: 100%;">
                <h4>Escolha a data e possibilidade de repetição do alarme</h4>
                <div class="col-md-4">
                    <input id="datetimepicker4" type="text" style="display: none;">
                </div>
                <div class="col-md-3">
                    <input type="text" id="time2" size="10" /></div>
                <div id="weekrepeat container1" class="col-md-3">
                    <input type="checkbox" name="week repeat1" value="enable week repeat">
                    Repetir semanalmente<br>
                    <div id="days-of-week1">
                        <input type="radio" value="7" class="checkthis form-group">
                        Domingo<br>
                        <input type="radio" value="1" class="checkthis form-group">
                        Segunda-Feira<br>
                        <input type="radio" value="2" class="checkthis form-group">
                        Terça-Feira<br>
                        <input type="radio" value="3" class="checkthis form-group">
                        Quarta-Feira<br>
                        <input type="radio" value="4" class="checkthis form-group">
                        Quinta-Feira<br>
                        <input type="radio" value="5" class="checkthis form-group">
                        Sexta-Feira<br>
                        <input type="radio" value="6" class="checkthis form-group">
                        Sábado<br>
                    </div>
                </div>
            </div>
            <button id="button2" type="submit" class="btn btn-success" value="Submit">Editar lembrete</button>

        </div>
    </form>
</div>
<script>
    $('#datetimepicker4').datetimepicker({
        format: 'd.m.Y H:i',
        inline: true,
        lang: 'pt',
        timepicker: false,
        theme: 'dark',
        minDate: '-1970/01/01',
        startDate: new Date("@Model.date"),
        time: '07:00', formatTime: 'H:i',


    });

    $(function () {
        $('#time2').timeselector();
    });

    $('#time2').val("@Model.time").timeselector('refresh');



    $(document).ready(function () {
        $("input[name='week repeat1']").click(function () {
            if ($(this).is(':checked')) {
                $($('#days-of-week1')).show();
            }
            else {
                $($('#days-of-week1')).hide();
            }
        });

        var days = "@Model.daysofweek";

        if (days > 0) { $($("input[name='week repeat1']")).prop('checked', true); }
        else $($('#days-of-week1')).hide();

        var inputsWeek = $("#days-of-week1 > :input");
        var mask = 1;
        for (var i = 0; i < inputsWeek.length; i++) {
            if ((mask & days) != 0) {
                $(inputsWeek[i]).prop('checked', true);
            }
            mask = mask << 1;
        }


    });

    function editReminder() {

        var datetimer = $('#datetimepicker4')[0];
        var test = $(datetimer).next();
        var calendar = $(test).find("[class*=xdsoft_current]");
        var dateCurrent = calendar[2];

        var time = $('#time2')[0];
        var date = dateCurrent.getAttribute("data-year") + "-" + (parseInt(dateCurrent.getAttribute("data-month")) + 1) + "-" + dateCurrent.getAttribute("data-date");
        var timer = time.value;

        var urls = new Array();
        var painel = $("#selectedPainel1");
        if (painel !== 'undefined') {
            var imgs = $(painel).find('img.img');
            if (imgs.length == 0) { $('#NoPictogramsError1').html("Não tem pictogramas selecionados"); return; }
            for (var i = 0; i < imgs.length; i++) {
                urls[i] = imgs[i].getAttribute("src");
            }
        }

        var inputsWeek = $("#days-of-week1 > :input");
        var anyBoxesChecked = [];

        for (var i = 0; i < inputsWeek.length; i++) {
            if ($($("input[name='week repeat1']")).is(':checked')) {
                var check = $(inputsWeek[i]).is(':checked');
                anyBoxesChecked.push(check);
            }
            else anyBoxesChecked.push(false);
        }

        var idx;
        var id = @Html.Raw(Json.Encode(Model))
            idx = id.id;
        var title = $("#title1").val();
        var description = $("#description1").val();

        $.ajax({
            type: 'POST',
            url: '/Reminder/EditReminder',
            contentType: 'application/json',
            data: JSON.stringify({
                id: idx,
                title: title,
                description: description,
                date: date,
                time: timer,
                urls: JSON.stringify(urls),
                contact: id.contact,
                repeatingDays: anyBoxesChecked
            }),
            traditionel: true,
            success: function (data, textStatus, xhr) {
                alert("O seu lembrete foi alterado com sucesso");
                $("#EditReminderError").empty();
            },
            error: function (data) {
                if (data.status == "400") {
                    $("#EditReminderError").html(data.statusText);
                }
                if (data.status == "404") {
                    var link = $('#links').find("a[ReminderId='" + idx + "']");
                    $(link).remove();
                    $('#editdiv').empty();
                }

            }
        });
    }

    function DeleteReminder(divParent, reminderId) {

        $.ajax({
            type: 'DELETE',
            url: '/Reminder/DeleteReminder',
            data: {
                id: reminderId,
            },
            traditionel: true,
            success: function (data, textStatus, xhr) {
                $(divParent).remove();
                var link = $('#links').find("a[ReminderId='" + reminderId + "']");
                $(link[0]).remove();
            },
            error: function (data) {
                if (data.status == "404") {
                    $(divParent).remove();
                    var link = $('#links').find("a[ReminderId='" + reminderId + "']");
                    $(link).remove();
                }
            }
        });
    }

</script>
